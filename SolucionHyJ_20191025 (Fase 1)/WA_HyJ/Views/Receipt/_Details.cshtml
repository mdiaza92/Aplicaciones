@model WA_HyJ.Models.ViewModels.DetalleComprobante

@{ 
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title"><b>@Html.DisplayFor(model => model.Tipo):</b> @Html.DisplayFor(model => model.Comprobante)</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="modal-body">
    <dl>
        <dt>
            Pedido
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Pedido.Codigo)
        </dd>
    </dl>

    <table class="table table-bordered table-hover center-all" id="DTDetallePedidoComprobante">
        <thead>
            <tr>
                <th>Código</th>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>PU</th>
                <th>Sub-Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Pedido.DetallePedido)
            {
            <tr data-idproducto="@item.Producto.Id">
                <td>@Html.DisplayFor(modelItem => item.Producto.Codigo)</td>
                <td>@Html.DisplayFor(modelItem => item.Producto.Nombre)</td>
                <td>@Html.EditorFor(modelItem => item.Cantidad, new { htmlAttributes = new { @class = "form-control Cantidad" } })</td>
                <td>@Html.DisplayFor(modelItem => item.Producto.PrecioUnitario)</td>
                <td>@Html.DisplayFor(modelItem => item.SubTotal)</td>
            </tr>
            }
        </tbody>
        <tfoot>
            <tr></tr>
        </tfoot>
    </table>

    <dl>
        <dt>
            Sub-Total
        </dt>

        <dd id="subtotalPedido">
            @Model.Pedido.DetallePedido.Sum(x => x.SubTotal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IGV)
        </dt>

        <dd id="IGVPedido" data-IGVValue="@Model.IGV">
            @((double)Model.Pedido.DetallePedido.Sum(x => x.SubTotal) * Model.IGV)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Pedido.Total)
        </dt>

        <dd id="totalPedido">
            @Html.DisplayFor(model => model.Pedido.Total)
        </dd>
    </dl>
</div>

<div class="modal-footer justify-content-between">
    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
    <button type="button" class="btn btn-primary" data-id="@Model.Id" data-idpedido="@Model.Pedido.Id" onclick="ConfirmarComprobante(this);">Siguiente</button>
</div>

<script type="text/javascript">
    $("table#DTDetallePedidoComprobante tbody").on("change paste keyup", "input[type='number'].Cantidad", function () {
        var valor = $(this).val();

        var tr = $(this).closest('tr');

        //get PU column
        var col4 = tr.find("td:eq(3)").text();

        var tdSubTotal = tr.find("td:eq(4)");

        var subtotal = (col4 * valor);

        //Calcular subtotal
        tdSubTotal.html(subtotal.toFixed(2));

        //Calcular total
        var subtotal = 0;

        $("table#DTDetallePedidoComprobante td:nth-child(5)").each(function (index) {
            subtotal = (parseFloat($(this).html()) + subtotal);
        });

        $("dd#subtotalPedido").html(subtotal.toFixed(2));

        var igv = subtotal * parseFloat($("dd#IGVPedido").data("igvvalue"));

        $("dd#IGVPedido").html(igv.toFixed(3));

        var total = (subtotal + igv).toFixed(2);

        $("dd#totalPedido").html(total);
    });

    function ConfirmarComprobante(e) {
        var __idpedido = $(e).data("idpedido");
        var __idcomprobante = $(e).data("id");
        var _model = [];

        $("table#DTDetallePedidoComprobante tbody tr").each(function () {
            var td = $(this).find("td");
            var _idProducto = $(this).data("idproducto");
            var _Cantidad = parseInt(td.eq(2).find("input[type=number].Cantidad").val());

            _model.push({ IdProducto: _idProducto, Cantidad: _Cantidad });
        });

        //Grab antiForgeryToken.
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        $.ajax({
            url: "@Url.Action("ActualizarPedido", "Order")",
            data:{
                model: _model,
                idpedido: __idpedido,
                idcomprobante: __idcomprobante
            },
        type: "POST",
        dataType: 'json',
        headers: {
            "__RequestVerificationToken": antiForgeryToken
        },
        success: function (result) {
            if (typeof result === "string" && result.indexOf("/") > -1) {
                showMedioPago(result);
            } else if (typeof result === "object") {
                toastr.info(result._ErrorMessage);
            } else {
                toastr.info("Se obtuvo como respuesta " + result + " del servidor y no se procesó la solicitud.");
            }
        }
    }).fail(function (jqXHR, textStatus, errorThrown) {
        var rsp = "";

        if (jqXHR.status === 0) {

            rsp = 'Not connect: Verify Network.';

        } else if (jqXHR.status == 404) {

            rsp = 'Requested page not found [404]';

        } else if (jqXHR.status == 500) {

            rsp = 'Internal Server Error [500].';

        } else if (textStatus === 'parsererror') {

            rsp = 'Requested JSON parse failed.';

        } else if (textStatus === 'timeout') {

            rsp = 'Time out error.';

        } else if (textStatus === 'abort') {

            rsp = 'Ajax request aborted.';

        } else {
            rsp = 'Uncaught Error: ' + jqXHR.responseText;
        }

        toastr.error(rsp);
    });
    }

    function showMedioPago(_url) {
        $("#modal-default").modal('hide');

        var OptModal = $("#modal-default-optional").modal();

        OptModal.on('shown.bs.modal', function (event) {
            var modal = $(this);

            $.ajax({
                type: 'GET',
                url: _url,
                success: function (result) {
                    modal.find('.modal-content').html(result);
                }
            });
        });

        OptModal.on('hide.bs.modal', function () {
            $(this).off();
        });
    }
</script>