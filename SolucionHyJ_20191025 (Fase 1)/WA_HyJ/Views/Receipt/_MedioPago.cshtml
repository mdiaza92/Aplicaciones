@model WA_HyJ.Models.ViewModels.ElegirMedioPago

@{
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title">Generar medio de pago</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="Cerrar(this);">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="modal-body">
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(model => model.IdMedioPago, htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(model => model.IdMedioPago, Model.MediosPago, "Seleccionar", new { @class = "form-control" })
    </div>
    <div id="cantidadletra" style="display:none;"><div class="loaderTiny"></div></div>
</div>

<div class="modal-footer justify-content-between">
    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="Cerrar(this);">Cerrar</button>
    <button type="button" id="AceptarMedioPago" disabled class="btn btn-primary" data-idpedido="@Model.IdPedido" data-id="@Model.IdComprobante" onclick="GenerarMedioPago(this);">Aceptar</button>
</div>

<script type="text/javascript">
    function Cerrar() {
        window.location.reload();
    }

    $("select#IdMedioPago").on("change", function () {
        var divSelected = $("div#cantidadletra");

        var selectedText = $(this).find("option:selected").text();
        var selectedValue = $(this).val();

        if(selectedValue.length > 0){
            $("button#AceptarMedioPago").prop("disabled", false);
            divSelected.css("display", "block");

            $.ajax({
                type: 'GET',
                url: '@Url.Content("~/Receipt/Evaluar")',
                data: {
                    idmetodopago: selectedValue,
                    idpedido: $("button#AceptarMedioPago").data("idpedido"),
                    idcomprobante: $("button#AceptarMedioPago").data("id")
                },
                success: function (result) {
                    divSelected.html(result);
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                divSelected.css("display", "none");

                var rsp = "";

                if (jqXHR.status === 0) {

                    rsp = 'Not connect: Verify Network.';

                } else if (jqXHR.status == 404) {

                    rsp = 'Requested page not found [404]';

                } else if (jqXHR.status == 500) {

                    rsp = 'Internal Server Error [500].';

                } else if (textStatus === 'parsererror') {

                    rsp = 'Requested JSON parse failed.';

                } else if (textStatus === 'timeout') {

                    rsp = 'Time out error.';

                } else if (textStatus === 'abort') {

                    rsp = 'Ajax request aborted.';

                } else {
                    rsp = 'Uncaught Error: ' + jqXHR.responseText;
                }

                toastr.error(rsp);
            });

        } else {
            $("button#AceptarMedioPago").prop("disabled", true);
            divSelected.css("display", "none");
            divSelected.html('<div class="loaderTiny"></div>');
        } 
    });
</script>

<script type="text/javascript">
    function GenerarMedioPago(e) {
        var idpedido = $(e).data("idpedido");
        var idcomprobante = $(e).data("id");

        //Grab antiForgeryToken.
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        var valMedioPago = parseInt($("select#IdMedioPago :selected").val());

        if (valMedioPago == 3) {
            calcularLetras(idpedido, idcomprobante, antiForgeryToken, valMedioPago);
        } else {
            calcularOtros(idpedido, idcomprobante, antiForgeryToken, valMedioPago);
        }
    }

    function calcularLetras(idpedido, idcomprobante, antiForgeryToken, valMedioPago) {
        //Cargamos la tabla generada por el metodo de pago tipo LETRA
        var detalleLetra = new Array();

        $("table#DTDetalleLetra > tbody > tr").each(function (index) {
            //campos
            var _numero, _total, _dias, _fecha;

            $(this).children("td").each(function (index2) {
                switch (index2) {
                    case 0:
                        _numero = parseInt($(this).html());
                        break;
                    case 1:
                        _total = parseFloat($(this).html());
                        break;
                    case 2:
                        _dias = parseInt($(this).find("input[type=number]#item_Dias").val());
                        break;
                    case 3:
                        _fecha = $(this).find("input[type=date]#item_Fecha").val();
                        break;
                }
            });

            var o = {
                'Numero': _numero,
                'Monto': _total,
                'Dias': _dias,
                'Fecha': _fecha
            };

            //Formato en base al viewmodel LetraDetalle
            detalleLetra.push(o);
        });

        var model = {
            'Cantidad': parseInt($("input[type=number]#Cantidad").val()),
            'Total' : parseFloat($("input[type=text]#Total").val()),
            'Fecha' : $("input[type=date]#Fecha").val(),
            'Detalle': detalleLetra
        };

        $.ajax({
            url: "@Url.Action("GenerarMedioPago", "Receipt")",
            data: {
                modelletra: model,
                idcomprobante: idcomprobante,
                idpedido: idpedido,
                idmediopago: valMedioPago
            },
            type: "POST",
        dataType: 'json',
        headers: {
            "__RequestVerificationToken": antiForgeryToken
        },
        success: function (result) {
            if (typeof result === "string" && result.indexOf("/") > -1) {
                window.location.href = result;
            } else if (typeof result === "object") {
                toastr.info(result._ErrorMessage);
            } else {
                toastr.info("Se obtuvo como respuesta " + result + " del servidor y no se procesó la solicitud.");
            }
        }
        }).fail(function (jqXHR, textStatus, errorThrown) {
        var rsp = "";

        if (jqXHR.status === 0) {

            rsp = 'Not connect: Verify Network.';

        } else if (jqXHR.status == 404) {

            rsp = 'Requested page not found [404]';

        } else if (jqXHR.status == 500) {

            console.log(jqXHR.responseText);

            rsp = 'Internal Server Error [500].';

        } else if (textStatus === 'parsererror') {

            rsp = 'Requested JSON parse failed.';

        } else if (textStatus === 'timeout') {

            rsp = 'Time out error.';

        } else if (textStatus === 'abort') {

            rsp = 'Ajax request aborted.';

        } else {
            rsp = 'Uncaught Error: ' + jqXHR.responseText;
        }

        toastr.error(rsp);
    });
    }

    function calcularOtros(idpedido, idcomprobante, antiForgeryToken, valMedioPago) {

        // Checking whether FormData is available in browser
        if (window.FormData !== undefined) {

            // Create FormData object
            var formData = new FormData();

            var file = $("input[type=file]#fileMedioPago").fileinput("getFileList")[0];

            if (file == null) return toastr.info("Es necesario seleccionar un archivo a cargar.");;

            formData.append("image", file);
            formData.append("idcomprobante", idcomprobante);
            formData.append("idmediopago", valMedioPago);

            $.ajax({
                url: "@Url.Action("GenerarMedioPago", "Receipt")",
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: formData,
                dataType: 'json',
                headers: {
                    "__RequestVerificationToken": antiForgeryToken
                },
                success: function (result) {
                    if (typeof result === "string" && result.indexOf("/") > -1) {
                        window.location.href = result;
                    } else if (typeof result === "object") {
                        toastr.info(result._ErrorMessage);
                    } else {
                        toastr.info("Se obtuvo como respuesta " + result + " del servidor y no se procesó la solicitud.");
                    }
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                var rsp = "";

                if (jqXHR.status === 0) {

                    rsp = 'Not connect: Verify Network.';

                } else if (jqXHR.status == 404) {

                    rsp = 'Requested page not found [404]';

                } else if (jqXHR.status == 500) {

                    console.log(jqXHR.responseText);

                    rsp = 'Internal Server Error [500].';

                } else if (textStatus === 'parsererror') {

                    rsp = 'Requested JSON parse failed.';

                } else if (textStatus === 'timeout') {

                    rsp = 'Time out error.';

                } else if (textStatus === 'abort') {

                    rsp = 'Ajax request aborted.';

                } else {
                    rsp = 'Uncaught Error: ' + jqXHR.responseText;
                }

                toastr.error(rsp);
            });
        } else {
            toastr.error("FormData is not supported.");
        }
    }
</script>