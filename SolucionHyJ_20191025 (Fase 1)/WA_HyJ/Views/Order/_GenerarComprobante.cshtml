@model WA_HyJ.Models.ViewModels.RegistrarFactura

@{
    ViewBag.Title = "Generar comprobante";
    Layout = null;
}

<!-- general form elements -->
<div class="card card-secondary">
    <div class="card-header">
        <h3 class="card-title">@ViewBag.Title para "@Model.CodigoOrden"</h3>
    </div>
    <!-- /.card-header -->

    @Html.AntiForgeryToken()
    <div class="card-body">
        <div class="form-group">
            @Html.LabelFor(model => model.Registro, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Registro, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FechaComprobante, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FechaComprobante, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdTipoComprobante, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.IdTipoComprobante, Model.TipoComprobante, null, new { @class = "form-control" })
        </div>
    </div>
    <!-- /.card-body -->

    <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
        <button type="button" class="btn btn-primary" data-id="@Model.IdOrden" onclick="GenerarFactura(this);">Aceptar</button>
    </div>
</div>

<script type="text/javascript">
    function GenerarFactura(e) {
        var __id = $(e).data("id");

        var _model = {
            IdOrden: __id,
            FechaComprobante: $("input#FechaComprobante").val(),
            Registro: $("input#Registro").val(),
            IdTipoComprobante: $("select#IdTipoComprobante :selected").val()
        };

        //Grab antiForgeryToken.
        var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

        $.ajax({
            url: "@Url.Action("RegistrarComprobante", "Order")",
            data:{
                model: _model
            },
        type: "POST",
        dataType: 'json',
        headers: {
            "__RequestVerificationToken": antiForgeryToken
        },
        success: function (result) {
            if (typeof result === "string" && result.indexOf("/") > -1) {
                window.location.href = result;
            } else if (typeof result === "object") {
                toastr.info(result._ErrorMessage);
            } else {
                toastr.info("Se obtuvo como respuesta " + result + " del servidor y no se procesó la solicitud.");
            }
        }
    }).fail(function (jqXHR, textStatus, errorThrown) {
        var rsp = "";

        if (jqXHR.status === 0) {

            rsp = 'Not connect: Verify Network.';

        } else if (jqXHR.status == 404) {

            rsp = 'Requested page not found [404]';

        } else if (jqXHR.status == 500) {

            rsp = 'Internal Server Error [500].';

        } else if (textStatus === 'parsererror') {

            rsp = 'Requested JSON parse failed.';

        } else if (textStatus === 'timeout') {

            rsp = 'Time out error.';

        } else if (textStatus === 'abort') {

            rsp = 'Ajax request aborted.';

        } else {
            rsp = 'Uncaught Error: ' + jqXHR.responseText;
        }

        toastr.error(rsp);
    });
    }
</script>